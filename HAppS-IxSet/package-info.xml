<package-info  xmlns="http://searchpath.org/package-info.rnc"

 name="HAppS-IxSet" 
 version="0.9.2"
 stability="alpha"
 keywords="data database data_structures"

> 

  <synopsis>	
	Efficient relational queries on Haskell sets.
  </synopsis>

  <description>
	Just pick which parts of your data structures you want indexed
	using an easy to use template-haskell function.  Spare yourself
	the need to write, run, and maintain code that marshalls your data
	to/from an external relational database just for efficient
	queries.  IxSet relies on generics and TH to spare you the
	boilerplate normally required for such tasks.  <!--Its as simple as this:[%

    import HAppS.Data.IxSet
    newtype SesKey = SesKey Integer deriving (Read,Show,Eq,Typeable,Data,Ord) 
    newtype ETime = ETime Integer deriving (Read,Show,Eq,Typeable,Data,Ord) 
    data Session val = 
        Session { sessionKey::SesKey, sessionETime :: ETime, 
                  sessionValue :: val}  
             deriving (Read,Show,Eq,Typeable,Data,Ord) 
	$(inferIxSet "Sessions" ''Session 'noCalcs [''SesKey,''ETime])
	getSes key = getOne . (@=key) 

	%]-->
  </description>

  <copyright year="2007" owner="HAppS LLC" license="BSD3" />

  <contact href="http://happs.org/HAppS-Data" roll="homepage" email="team@happs.org"/>

  <exposes base="HAppS.Data.IxSet" path="src" />

  <changes since="0.9.0">
	Module consolidation from other packages. 
	
	Tested with AllIn and new state stuff.
  </changes> 

</package-info>
